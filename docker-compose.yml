services:
  postgres:
    container_name: postgres_clinic_db
    image: postgres
    environment:
      POSTGRES_USER: maxvpire
      POSTGRES_PASSWORD: max26156
      PGDATA: /var/lib/postgres/data
    volumes:
      - postgres:/var/lib/postgres/data
    ports:
      - 5432:5432
    networks:
      - microservices-net
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_clinic
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - 5050:80
    networks:
      - microservices-net
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: maxvpire
      MINIO_ROOT_PASSWORD: max26156
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  mongo:
    image: mongo:7.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: strongpassword

  zookeeper:
      image: confluentinc/cp-zookeeper:7.5.0
      container_name: zookeeper
      restart: unless-stopped
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000

      networks:
        microservices-net:

  kafka:
      image: confluentinc/cp-kafka:7.5.0
      container_name: kafka
      restart: unless-stopped
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
        - "29092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://192.168.206.130:9092
        KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      networks:
        microservices-net:

  mail-dev:
    container_name: mail_dev_clinic
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

  config-server:
    build: ./services/config-server
    ports:
      - "8888:8888"

  discovery:
    build: ./services/discovery
    depends_on:
      - config-server
    ports:
      - "8761:8761"

  administration:
    build: ./services/administration
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio
    ports:
      - "7744:7744"

  appointments:
    build: ./services/appointments
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio

    ports:
      - "7755:7755"

  doctors:
    build: ./services/doctors
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio
    ports:
      - "7799:7799"


  medicalrecords:
    build: ./services/medicalrecords
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio

    ports:
      - "7766:7766"


  patients:
    build: ./services/patients
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio

    ports:
      - "7788:7788"


  payment:
    build: ./services/payment
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio

    ports:
      - "7711:7711"


  rates:
    build: ./services/rates
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio

    ports:
      - "7733:7733"


  users:
    build: ./services/users
    depends_on:
      - postgres
      - mongo
      - kafka
      - config-server
      - discovery
      - minio

    ports:
      - "7771:7771"

  gateway:
    build: ./services/gateway
    depends_on:
      - administration
      - appointments
      - discovery
      - doctors
      - config-server
      - medicalrecords
      - patients
      - payment
      - rates
      - users




networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo_data:
  minio_data:
